{
  "openapi": "3.0.0",
  "info": {
    "title": "Book and Author API",
    "description": "Task Management Api",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local server"
    },
    {
      "url": "https://cse-341-project1-he3j.onrender.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/user": {
      "get": {
        "summary": "Retrieve all users",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "user created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/user/{id}": {
      "put": {
        "summary": "Update an existing user",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid input or user ID"
          },
          "404": {
            "description": "user not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the user to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user deleted successfully"
          },
          "400": {
            "description": "Invalid user ID"
          },
          "404": {
            "description": "user not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/task": {
      "get": {
        "summary": "Retrieve all task",
        "tags": ["Task"],
        "responses": {
          "200": {
            "description": "A list of Task",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new task",
        "tags": ["Task"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/task/{id}": {
      "put": {
        "summary": "Update an existing task",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the task to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Task updated successfully" },
          "400": { "description": "Invalid input or task ID" },
          "404": { "description": "Task not found" },
          "500": { "description": "Internal server error" }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "tags": ["Task"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the task to delete",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Task deleted successfully" },
          "400": { "description": "Invalid task ID" },
          "404": { "description": "task not found" },
          "500": { "description": "Internal server error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "author": { "type": "string" },
          "publishedYear": { "type": "integer" },
          "genre": { "type": "string" }
        },
        "required": ["title", "author", "publishedYear"]
      },
      "Task": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string"},
          "completed": { "type": "string" },
          "dueDate": {"type": "integer"},
          "status": {"type": "string"}
        },
        "required": ["name"]
      }
    }
  }
}