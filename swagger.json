{
  "openapi": "3.0.0",
  "info": {
    "title": "Book and Author API",
    "description": "API for managing books and authors",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Local server"
    },
    {
      "url": "https://cse-341-project1-he3j.onrender.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/books": {
      "get": {
        "summary": "Retrieve all books",
        "tags": ["Books"],
        "responses": {
          "200": {
            "description": "A list of books",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Book"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new book",
        "tags": ["Books"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/books/{id}": {
      "put": {
        "summary": "Update an existing book",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the book to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Book"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully"
          },
          "400": {
            "description": "Invalid input or book ID"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a book",
        "tags": ["Books"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the book to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully"
          },
          "400": {
            "description": "Invalid book ID"
          },
          "404": {
            "description": "Book not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/author": {
      "get": {
        "summary": "Retrieve all author",
        "tags": ["Author"],
        "responses": {
          "200": {
            "description": "A list of author",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Author"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new author",
        "tags": ["Author"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Author created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/author/{id}": {
      "put": {
        "summary": "Update an existing author",
        "tags": ["Author"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the author to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Author"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Author updated successfully" },
          "400": { "description": "Invalid input or author ID" },
          "404": { "description": "Author not found" },
          "500": { "description": "Internal server error" }
        }
      },
      "delete": {
        "summary": "Delete an author",
        "tags": ["Authors"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the author to delete",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Author deleted successfully" },
          "400": { "description": "Invalid author ID" },
          "404": { "description": "Author not found" },
          "500": { "description": "Internal server error" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Book": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "author": { "type": "string" },
          "publishedYear": { "type": "integer" },
          "genre": { "type": "string" }
        },
        "required": ["title", "author", "publishedYear"]
      },
      "Author": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "books": { "type": "string"},
          "completion": { "type": "string" },
          "publishedYear": {"type": "integer"},
          "dob": {"type": "integer"}
        },
        "required": ["name"]
      }
    }
  }
}
